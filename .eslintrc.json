{
  "root": true,
  "plugins": ["prettier"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "prettier/prettier": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": "yt",
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "yt",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        "@angular-eslint/prefer-output-readonly": ["warn"],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "public-static-field",
              "public-instance-field",
              "protected-static-field",
              "protected-instance-field",
              "private-static-field",
              "private-instance-field",

              "public-constructor",
              "private-constructor",

              "public-instance-method",
              "protected-instance-method",
              "private-instance-method"
            ]
          }
        ],
        "@typescript-eslint/no-unsafe-member-access": ["off"],
        "@typescript-eslint/no-explicit-any": ["off"],
        "@typescript-eslint/no-implicit-any-catch": [
          "error",
          { "allowExplicitAny": true }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true
          }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": ["error"],
        "@typescript-eslint/no-unsafe-call": ["off"],
        "@typescript-eslint/no-unsafe-assignment": ["off"],
        "@typescript-eslint/explicit-module-boundary-types": ["off"],
        "@typescript-eslint/no-empty-function": ["off"],
        "@typescript-eslint/no-non-null-assertion": ["off"],
        "no-prototype-builtins": ["off"],
        "no-case-declarations": ["off"],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxEOF": 1,
            "maxBOF": 0
          }
        ],
        "eol-last": ["error", "always"],
        "semi": ["error", "always"],
        "quotes": [
          "error",
          "single",
          { "allowTemplateLiterals": true, "avoidEscape": true }
        ],
        "no-empty": ["error"],
        "no-console": ["error", { "allow": ["warn", "error", "info", "log"] }],
        "curly": ["error"],
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-useless-constructor": ["error"],
        "@typescript-eslint/type-annotation-spacing": ["error"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": [
              "variable",
              "objectLiteralProperty",
              "classProperty",
              "enumMember"
            ],
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": ["typeProperty"],
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    },
    {
      "files": ["*.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "rules": {
        "prettier/prettier": ["error", { "parser": "angular" }]
      }
    }
  ]
}
